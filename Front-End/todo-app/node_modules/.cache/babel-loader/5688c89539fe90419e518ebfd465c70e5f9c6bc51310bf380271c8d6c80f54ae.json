{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching\\\\Java\\\\Front-End\\\\todo-app\\\\src\\\\components\\\\todo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\n\n//1:  Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n//2: Share the created context with other component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  // Put some state in the context\n  const [number, setNumber] = useState(0);\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [username, setUsername] = useState(null);\n  // setInterval(()=>setNumber(number+1), 10000)\n\n  function login(username, password) {\n    // if(username==='Vick7' && password=='abc123'){\n    //     setAuthenticated(true)\n    //     setUsername(username)\n    //     return true\n    // }\n    // else{\n    //     setAuthenticated(false)\n    //     setUsername(null)\n    //     return false\n    // }\n\n    const baToken = 'Basic ' + window.btoa(username + \":\" + password);\n    executeBasicAuthenticationService(baToken).then(response => console.log(response)).catch(error => console.log(error));\n    setAuthenticated(false);\n\n    // if(username==='Vick7' && password=='abc123'){\n    //     setAuthenticated(true)\n    //     setUsername(username)\n    //     return true\n    // }\n    // else{\n    //     setAuthenticated(false)\n    //     setUsername(null)\n    //     return false\n    // }\n  }\n\n  function logout() {\n    setAuthenticated(false);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      number,\n      isAuthenticated,\n      setAuthenticated,\n      login,\n      logout,\n      username\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"kBBgAJoX3+SdulAAGIwW/GKP5wc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeBasicAuthenticationService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","_ref","_s2","children","number","setNumber","isAuthenticated","setAuthenticated","username","setUsername","login","password","baToken","window","btoa","then","response","console","log","catch","error","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/teaching/Java/Front-End/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { executeBasicAuthenticationService } from \"../api/HelloWorldApiService\";\r\n\r\n//1:  Create a context\r\nexport const AuthContext = createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n//2: Share the created context with other component\r\nexport default function AuthProvider({children}){\r\n    // Put some state in the context\r\n    const [number, setNumber] = useState(0)\r\n    const [isAuthenticated, setAuthenticated] =useState(false)\r\n    const [username, setUsername] = useState(null)\r\n    // setInterval(()=>setNumber(number+1), 10000)\r\n\r\n    function login(username,password){\r\n        // if(username==='Vick7' && password=='abc123'){\r\n        //     setAuthenticated(true)\r\n        //     setUsername(username)\r\n        //     return true\r\n        // }\r\n        // else{\r\n        //     setAuthenticated(false)\r\n        //     setUsername(null)\r\n        //     return false\r\n        // }\r\n\r\n        const baToken = 'Basic '+ window.btoa(username + \":\" +password)\r\n\r\n        executeBasicAuthenticationService(baToken)\r\n        .then(response => console.log(response))\r\n        .catch(error => console.log(error))\r\n        setAuthenticated(false)\r\n\r\n        // if(username==='Vick7' && password=='abc123'){\r\n        //     setAuthenticated(true)\r\n        //     setUsername(username)\r\n        //     return true\r\n        // }\r\n        // else{\r\n        //     setAuthenticated(false)\r\n        //     setUsername(null)\r\n        //     return false\r\n        // }\r\n    }\r\n    function logout(){\r\n        setAuthenticated(false)\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={{number, isAuthenticated, setAuthenticated, login, logout, username}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,iCAAiC,QAAQ,6BAA6B;;AAE/E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAAC,IAAA,EAAY;EAAAC,GAAA;EAAA,IAAX;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC3C;EACA,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,eAAe,EAAEC,gBAAgB,CAAC,GAAEd,QAAQ,CAAC,KAAK,CAAC;EAC1D,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C;;EAEA,SAASiB,KAAKA,CAACF,QAAQ,EAACG,QAAQ,EAAC;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,OAAO,GAAG,QAAQ,GAAEC,MAAM,CAACC,IAAI,CAACN,QAAQ,GAAG,GAAG,GAAEG,QAAQ,CAAC;IAE/DjB,iCAAiC,CAACkB,OAAO,CAAC,CACzCG,IAAI,CAACC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CACvCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;IACnCb,gBAAgB,CAAC,KAAK,CAAC;;IAEvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;;EACA,SAASc,MAAMA,CAAA,EAAE;IACbd,gBAAgB,CAAC,KAAK,CAAC;EAC3B;EACA,oBACIX,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAACnB,MAAM;MAAEE,eAAe;MAAEC,gBAAgB;MAAEG,KAAK;MAAEW,MAAM;MAAEb;IAAQ,CAAE;IAAAL,QAAA,EAC7FA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAG/B;AAACzB,GAAA,CA9CuBF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}