{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching\\\\Java\\\\Project-Intern\\\\Front-End\\\\todo-app\\\\src\\\\components\\\\todo\\\\security\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { executeJwtAuthenticationService, executeLogoutService } from \"../api/AuthenticationApiService\";\n\n//1:  Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n//2: Share the created context with other component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  // Put check auth state in the context\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  async function login(usernameInput, password) {\n    try {\n      const response = await executeJwtAuthenticationService(usernameInput, password);\n      if (response.status === 200) {\n        setAuthenticated(true);\n        return true;\n      } else {\n        logout();\n        return false;\n      }\n    } catch (error) {\n      logout();\n      return false;\n    }\n  }\n  async function logout() {\n    try {\n      await executeLogoutService();\n      // Send request to backend to invalidate session.\n      setAuthenticated(false);\n    } catch (error) {\n      console.error(\"Error during logout\", error);\n      return false;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"5SSB8E6XvROKDUFw38DKoZLgQsI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","executeJwtAuthenticationService","executeLogoutService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","_ref","_s2","children","isAuthenticated","setAuthenticated","login","usernameInput","password","response","status","logout","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/teaching/Java/Project-Intern/Front-End/todo-app/src/components/todo/security/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { executeJwtAuthenticationService, executeLogoutService } from \"../api/AuthenticationApiService\";\r\n\r\n//1:  Create a context\r\nexport const AuthContext = createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\n//2: Share the created context with other component\r\nexport default function AuthProvider({ children }) {\r\n    // Put check auth state in the context\r\n    const [isAuthenticated, setAuthenticated] = useState(false)\r\n    async function login(usernameInput, password) {\r\n\r\n        try {\r\n\r\n            const response = await executeJwtAuthenticationService(usernameInput, password)\r\n\r\n            if(response.status===200){\r\n                \r\n                setAuthenticated(true)\r\n\r\n                return true            \r\n            } else {\r\n                logout()\r\n                return false\r\n            }    \r\n        } catch(error) {\r\n            logout()\r\n            return false\r\n        }\r\n    }\r\n\r\n   async function logout() {\r\n       try{\r\n         await executeLogoutService(); \r\n         // Send request to backend to invalidate session.\r\n         setAuthenticated(false);\r\n       }\r\n       catch(error){\r\n          console.error(\"Error during logout\", error);\r\n          return false;\r\n        }\r\n   }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,+BAA+B,EAAEC,oBAAoB,QAAQ,iCAAiC;;AAEvG;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,eAAe,SAASE,YAAYA,CAAAC,IAAA,EAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7C;EACA,MAAM,CAACG,eAAe,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,eAAec,KAAKA,CAACC,aAAa,EAAEC,QAAQ,EAAE;IAE1C,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMhB,+BAA+B,CAACc,aAAa,EAAEC,QAAQ,CAAC;MAE/E,IAAGC,QAAQ,CAACC,MAAM,KAAG,GAAG,EAAC;QAErBL,gBAAgB,CAAC,IAAI,CAAC;QAEtB,OAAO,IAAI;MACf,CAAC,MAAM;QACHM,MAAM,CAAC,CAAC;QACR,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,OAAMC,KAAK,EAAE;MACXD,MAAM,CAAC,CAAC;MACR,OAAO,KAAK;IAChB;EACJ;EAED,eAAeA,MAAMA,CAAA,EAAG;IACpB,IAAG;MACD,MAAMjB,oBAAoB,CAAC,CAAC;MAC5B;MACAW,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,CACD,OAAMO,KAAK,EAAC;MACTC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO,KAAK;IACd;EACL;EAEC,oBACIhB,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEX,eAAe;MAAEE,KAAK;MAAEK;IAAO,CAAE;IAAAR,QAAA,EAC3DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAACjB,GAAA,CAzCuBF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}