{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching\\\\Java\\\\Internship_Project\\\\todo-app\\\\src\\\\components\\\\todo\\\\ListNoteComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { retrieveAllNoteForTodo, deleteNoteApi, createNoteApi } from \"./api/NoteApiService\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListNoteComponent() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const date = new Date();\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => refreshNotes(), []);\n  function refreshNotes() {\n    retrieveAllNoteForTodo(id).then(response => {\n      setNotes(response.data);\n    }).catch(error => console.log(error));\n  }\n  function deleteNote(id) {\n    deleteNoteApi(id).then(() => {\n      setMessage(`Deletion of Note with ID = ${id} was successful!`);\n      refreshNotes();\n    }\n\n    //1: Display message\n    //2: Update Todos list\n    ).catch(error => console.log(error));\n  }\n  function addNewNote(id) {\n    navigate(`/todo/${id}/note/create`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note of Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Create Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: notes.map(note => {\n            const createDate = new Date(note.dateTime);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: note.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(note.dateTime).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-dark custom-button\",\n                  onClick: () => deleteNote(note.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 45\n              }, this)]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary btn-lg custom-button m-5\",\n      onClick: () => addNewNote(id),\n      children: \"Add New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ListNoteComponent, \"ZpLwcuw2NSYgluWeFOd2mWaYf5Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ListNoteComponent;\nexport default ListNoteComponent;\nvar _c;\n$RefreshReg$(_c, \"ListNoteComponent\");","map":{"version":3,"names":["useEffect","useState","retrieveAllNoteForTodo","deleteNoteApi","createNoteApi","useNavigate","useParams","jsxDEV","_jsxDEV","ListNoteComponent","_s","id","date","Date","notes","setNotes","message","setMessage","navigate","refreshNotes","then","response","data","catch","error","console","log","deleteNote","addNewNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","createDate","dateTime","description","toLocaleString","onClick","type","_c","$RefreshReg$"],"sources":["D:/teaching/Java/Internship_Project/todo-app/src/components/todo/ListNoteComponent.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {retrieveAllNoteForTodo, deleteNoteApi, createNoteApi} from \"./api/NoteApiService\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nfunction ListNoteComponent() {\r\n    const { id } = useParams()\r\n    const date = new Date();\r\n\r\n    const [notes, setNotes] = useState([])\r\n    const [message, setMessage] = useState(null)\r\n    const navigate = useNavigate();\r\n    useEffect(() => refreshNotes(), [])\r\n\r\n    function refreshNotes() {\r\n        retrieveAllNoteForTodo(id)\r\n            .then(response => {\r\n                setNotes(response.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n    function deleteNote(id) {\r\n        deleteNoteApi(id)\r\n            .then(\r\n                () => {\r\n                    setMessage(`Deletion of Note with ID = ${id} was successful!`)\r\n                    refreshNotes()\r\n                }\r\n\r\n                //1: Display message\r\n                //2: Update Todos list\r\n            )\r\n            .catch(error => console.log(error))\r\n\r\n    }\r\n\r\n    function addNewNote(id) {\r\n        navigate(`/todo/${id}/note/create`)\r\n\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Note of Todo </h1>\r\n            {message && <div className=\"alert alert-warning\">{message}</div>}\r\n            <div>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Create Date</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            notes.map(\r\n                                note => {\r\n                                    const createDate = new Date(note.dateTime);\r\n                                    return (\r\n                                        <tr key={note.id}>\r\n                                            <td>{note.description}</td>\r\n                                            <td>{new Date(note.dateTime).toLocaleString()}</td>\r\n                                            <td><button className=\"btn btn-dark custom-button\" onClick={() => deleteNote(note.id)} >Delete</button></td>\r\n                \r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-secondary btn-lg custom-button m-5\" onClick={() => addNewNote(id)} >Add New Note</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListNoteComponent"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}