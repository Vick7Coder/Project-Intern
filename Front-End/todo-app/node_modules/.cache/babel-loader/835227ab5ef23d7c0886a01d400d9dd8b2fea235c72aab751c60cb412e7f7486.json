{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching\\\\Java\\\\Internship_Project\\\\todo-app\\\\src\\\\components\\\\todo\\\\CategoryComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { retrieveCategoryApi, updateCategoryApi, createCategoryApi, retrieveAllTodoForCategory } from './CategoryApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategoryComponent() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState('');\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (id) {\n      getCategory();\n      getTodos();\n    }\n  }, [id]);\n  const getCategory = () => {\n    retrieveCategoryApi(id).then(response => setName(response.data.name));\n  };\n  const getTodos = () => {\n    retrieveAllTodoForCategory(id).then(response => setTodos(response.data));\n  };\n  const onSubmit = values => {\n    const category = {\n      id,\n      name: values.name\n    };\n    if (id = -1) {\n      updateCategoryApi(id, category);\n    } else {\n      createCategoryApi(category);\n    }\n    navigate('/categories');\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name\n    },\n    onSubmit: onSubmit,\n    children: _ref => {\n      let {\n        handleSubmit\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [\"xml Copy\", id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n            ...todo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryComponent, \"cR3wlAQTzawMHSBZOeJ8AFT6ttc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CategoryComponent;\nvar _c;\n$RefreshReg$(_c, \"CategoryComponent\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","Formik","Form","retrieveCategoryApi","updateCategoryApi","createCategoryApi","retrieveAllTodoForCategory","jsxDEV","_jsxDEV","CategoryComponent","_s","id","name","setName","todos","setTodos","navigate","getCategory","getTodos","then","response","data","onSubmit","values","category","initialValues","children","_ref","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","Todo","type","_c","$RefreshReg$"],"sources":["D:/teaching/Java/Internship_Project/todo-app/src/components/todo/CategoryComponent.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport {\r\n    retrieveCategoryApi,\r\n    updateCategoryApi,\r\n    createCategoryApi,\r\n    retrieveAllTodoForCategory\r\n} from './CategoryApiService';\r\n\r\nexport default function CategoryComponent() {\r\n\r\n    const { id } = useParams();\r\n    const [name, setName] = useState('');\r\n    const [todos, setTodos] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            getCategory();\r\n            getTodos();\r\n        }\r\n    }, [id]);\r\n\r\n    const getCategory = () => {\r\n        retrieveCategoryApi(id)\r\n            .then(response => setName(response.data.name));\r\n    }\r\n\r\n    const getTodos = () => {\r\n        retrieveAllTodoForCategory(id)\r\n            .then(response => setTodos(response.data));\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        const category = {\r\n            id,\r\n            name: values.name\r\n        }\r\n\r\n        if (id = -1) {\r\n            updateCategoryApi(id, category);\r\n        } else {\r\n            createCategoryApi(category);\r\n        }\r\n\r\n        navigate('/categories');\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{ name }} onSubmit={onSubmit} >\r\n            {({ handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n\r\n                    xml\r\n                    Copy\r\n                    {id && (\r\n                        <div>\r\n                            <h3>Todos</h3>\r\n                            {todos.map(todo => (\r\n                                <Todo\r\n                                    key={todo.id}\r\n                                    {...todo}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n\r\n                    <label>Name</label>\r\n                    <input\r\n                        name=\"name\"\r\n                    />\r\n\r\n                    <button type=\"submit\">\r\n                        Save\r\n                    </button>\r\n\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}