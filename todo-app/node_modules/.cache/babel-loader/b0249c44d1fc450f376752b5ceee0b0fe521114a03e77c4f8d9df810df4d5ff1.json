{"ast":null,"code":"var _jsxFileName = \"D:\\\\teaching\\\\Java\\\\Internship_Project\\\\todo-app\\\\src\\\\components\\\\todo\\\\CategoryComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { retrieveCategoryApi, updateCategoryApi, retrieveAllTodoForCategory } from './api/CategoryApiService';\nimport { Formik, Form, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CategoryComponent() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [category, setCategory] = useState({\n    name: '',\n    todos: []\n  });\n  const [todos, setTodos] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    retrieveCategory();\n    getTodos();\n  }, [id]);\n  function retrieveCategory() {\n    retrieveCategoryApi(id).then(response => {\n      setCategory(response.data);\n    }).catch(error => console.log(error));\n  }\n  function getTodos() {\n    retrieveAllTodoForCategory(id).then(response => {\n      setTodos(response.data);\n    }).catch(error => console.log(error));\n  }\n  function onSubmit(values) {\n    updateCategoryApi(id, values).then(() => navigate('/categories'));\n  }\n  function validate(values) {\n    let errors = {};\n    if (!values.name) {\n      errors.name = 'Name is required';\n    }\n    return errors;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: category.name\n      },\n      onSubmit: onSubmit,\n      validate: validate,\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), category.todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.name\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryComponent, \"P6QyXtVUlkHYy9vpvK5aZPgpo4s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CategoryComponent;\nvar _c;\n$RefreshReg$(_c, \"CategoryComponent\");","map":{"version":3,"names":["useEffect","useState","useParams","useNavigate","retrieveCategoryApi","updateCategoryApi","retrieveAllTodoForCategory","Formik","Form","Field","jsxDEV","_jsxDEV","CategoryComponent","_s","id","category","setCategory","name","todos","setTodos","navigate","retrieveCategory","getTodos","then","response","data","catch","error","console","log","onSubmit","values","validate","errors","children","initialValues","props","fileName","_jsxFileName","lineNumber","columnNumber","type","map","todo","_c","$RefreshReg$"],"sources":["D:/teaching/Java/Internship_Project/todo-app/src/components/todo/CategoryComponent.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { \r\n  retrieveCategoryApi, \r\n  updateCategoryApi,\r\n  retrieveAllTodoForCategory\r\n} from './api/CategoryApiService';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nexport default function CategoryComponent() {\r\n  const { id } = useParams();\r\n\r\n  const [category, setCategory] = useState({\r\n    name: '', \r\n    todos: []\r\n  });\r\n\r\n  const [todos, setTodos] = useState([]);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    retrieveCategory();\r\n    getTodos();\r\n  }, [id]);\r\n\r\n  function retrieveCategory() {\r\n    retrieveCategoryApi(id)\r\n      .then(response => {\r\n        setCategory(response.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  function getTodos() {\r\n    retrieveAllTodoForCategory(id)\r\n      .then(response => {\r\n        setTodos(response.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n    function onSubmit(values) {\r\n        updateCategoryApi(id, values)\r\n            .then(() => navigate('/categories'))\r\n    }\r\n\r\n    function validate(values) {\r\n        let errors = {}\r\n\r\n        if (!values.name) {\r\n            errors.name = 'Name is required'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    name: category.name\r\n                }}\r\n                onSubmit={onSubmit}\r\n                validate={validate}\r\n            >\r\n                {props => (\r\n                    <Form>\r\n                        <Field name=\"name\" />\r\n\r\n\r\n                        <button type=\"submit\">Save</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <h3>Todos</h3>\r\n\r\n            {category.todos.map(todo => (\r\n                <div key={todo.id}>\r\n                    {todo.name}\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}